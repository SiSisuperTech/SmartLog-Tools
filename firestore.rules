rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Function to check if the user is authenticated and has correct domain
    function isAuthenticated() {
      return request.auth != null && 
             request.auth.token.email.matches('.*@allisone\\.ai$');
    }
    
    // Authorized users collection
    match /authorizedUsers/{email} {
      // Anyone with allowed domain can read their own document
      allow get: if isAuthenticated() && 
                   email == request.auth.token.email;
      
      // Users can create their own document when first logging in
      allow create: if isAuthenticated() && 
                      email == request.auth.token.email;
                      
      // Only special admin can modify other users
      allow list, update, delete: if isAuthenticated() && 
                                    request.auth.token.email == 'admin@allisone.ai';
    }
    
    // Uploaded files collection - only allow access to your own files
    match /uploadedFiles/{fileId} {
      allow read: if isAuthenticated() && 
                   (resource.data.uploadedBy == request.auth.uid);
      allow create: if isAuthenticated();
      allow update, delete: if false; // No updates or deletes
    }
    
    // uploadedLogs collection for log analysis
    match /uploadedLogs/{logId} {
      allow read: if isAuthenticated() && 
                   (resource.data.userId == request.auth.uid);
      allow create: if isAuthenticated();
      allow update, delete: if false; // No updates or deletes
      
      // Allow access to entries subcollection
      match /entries/{entryId} {
        allow read: if isAuthenticated() && 
                    get(/databases/$(database)/documents/uploadedLogs/$(logId)).data.userId == request.auth.uid;
        allow write: if false; // Only writable by functions
      }
    }
    
    // Query cache - read is permitted, but write only by functions
    match /queryCache/{cacheId} {
      allow read: if isAuthenticated();
      allow write: if false; // Only writable by backend functions
    }
    
    // Request logs - only for audit
    match /requestLogs/{logId} {
      allow read: if isAuthenticated() && 
                   request.auth.token.email == 'admin@allisone.ai';
      allow write: if false; // Only writable by backend functions
    }
    
    // Login logs - users can only read their own
    match /loginLogs/{logId} {
      allow read: if isAuthenticated() && 
                   resource.data.email == request.auth.token.email;
      allow write: if false;
    }
    
    // Security events - admin only
    match /securityEvents/{eventId} {
      allow read: if isAuthenticated() && 
                   request.auth.token.email == 'admin@allisone.ai';
      allow write: if false;
    }
    
    // Rate limits - no user access
    match /rateLimits/{userId} {
      allow read, write: if false;
    }
    
    // Default: deny all access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}